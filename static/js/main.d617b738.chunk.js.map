{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","className","styles","form","style","marginBottom","e","preventDefault","type","value","pattern","title","required","onChange","currentTarget","Filter","ContactList","contacts","filter","onDelete","contact","toLowerCase","includes","fits","map","onClick","id","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","length","alert","uuidv4","newList","push","contactId","reducedList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d617b738.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1g3VE\"};","import React, { useState } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={styles.form}\r\n      style={{ marginBottom: \"32px\" }}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state.name, this.state.number);\r\n        onSubmit(name, number);\r\n        reset();\r\n      }}\r\n    >\r\n      <p>Name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={(e) => {\r\n          //console.log(\"name\", e.currentTarget.value);\r\n          setName(e.currentTarget.value);\r\n        }}\r\n      />\r\n\r\n      <p>Number</p>\r\n      <input\r\n        type=\"tel\"\r\n        value={number}\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        onChange={(e) => {\r\n          //console.log(\"number\", e.currentTarget.value);\r\n          setNumber(e.currentTarget.value);\r\n        }}\r\n      />\r\n      <div>\r\n        <br />\r\n        <button type=\"submit\">Add contact</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","//import styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Filter({ onChange }) {\r\n  return (\r\n    <div>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => {\r\n          //console.log(e.currentTarget.value);\r\n          onChange(e.currentTarget.value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","//import styles from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction fits(name, filter) {\r\n  return name.toLowerCase().includes(filter.toLowerCase());\r\n}\r\n\r\nfunction ContactList({ contacts, filter, onDelete }) {\r\n  return (\r\n    <ul>\r\n      {contacts\r\n        .filter((contact) => fits(contact.name, filter))\r\n        .map((contact) => {\r\n          return (\r\n            <li key={contact.id}>\r\n              {contact.name} {contact.number}\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  onDelete(contact.id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { useState, useEffect } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm.js\";\nimport Filter from \"./components/Filter/Filter.js\";\nimport ContactList from \"./components/ContactList/ContactList.js\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"phonebook\")) ?? [];\n  });\n  const [filter, setFilter] = useState(() => {\n    return \"\";\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(\"phonebook\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const onAddContact = (name, number) => {\n    const selectedContact = contacts.filter((contact) => {\n      return contact.name === name;\n    });\n    if (selectedContact.length > 0) {\n      alert(name + \" is already in contacts\");\n    } else {\n      const id = uuidv4();\n      //console.log(contacts);\n      const newList = contacts.filter((contact) => {\n        return true;\n      });\n      //console.log(newList);\n      newList.push({\n        id: id,\n        name: name,\n        number: number,\n      });\n      setContacts(newList);\n      //console.log(newList);\n    }\n  };\n\n  const onChangeFilter = (filter) => {\n    //console.log(\"filter\", filter);\n    setFilter(filter);\n  };\n\n  const onDeleteContact = (contactId) => {\n    //console.log(contactId);\n    const reducedList = contacts.filter((contact) => {\n      return contact.id !== contactId;\n    });\n    setContacts(reducedList);\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={onAddContact} />\n\n      <h2>Contacts</h2>\n      <Filter onChange={onChangeFilter} />\n      <ContactList\n        contacts={contacts}\n        filter={filter}\n        onDelete={onDeleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}